This is an automated test script for SYMPLER. This script compiles the code, runs each input file (from the inputs stored in 'TSTIN' directory).
It creates a directory for compilation and one for simulation. While simulation is on progress, it runs an inputfile and compares its output with old ouputs (stored in 'RESULTS' directory).   
Finally, this script deletes directories created for compilation and simulation.

Some tips and constraints:
1. This script should be placed in some direct sub directory of code directory (e.g.: ../sympler/some SUB_DIRECTORY/test_sympler.pl). 
2. Please make sure that you are in the directory "testsuite/" in order to run this script successfully. 
3. New input files should be added as "testsuite/TSTIN/SOME_NEW_DIRECTORY/test.xml". Here, the input file name should always be "test.xml". If you want to add a brand new input file, please run it manually first time and make a copy of the output file (for eg: sim.dat or acf.dat) into "RESULTS/" directory. So that it can be used for debugging, when you run the script afterwards.  
4. Output file names should differ.
5. For a successful passing of all test-runs you also have to install the optional libraries libtnt, libjama, libsuperlu (including development-packages if separately available). Currently (2013-08-09), this affects the test "vel_constraints".


RUNNING THE SCRIPT:

- Normal way: It chooses default directory (/tmp/BUILDDIR)
  Type "perl test_sympler.pl" or "./test_sympler.py" to run this script. 

- With option: It chooses your desired directory
  Type "perl test_sympler.pl --builddir PATH_TO_THE_DIRECTORY_WHERE_YOU_WANT_TO_BUILD_THE_CODE"
  or
  Type "./test_sympler.pl --builddir PATH_TO_THE_DIRECTORY_WHERE_YOU_WANT_TO_BUILD_THE_CODE" 

Here you can also give a relative path.


HOW TO DEAL WITH THE SCRIPT'S OUTPUT:

- An Error message is an error messages, i.e., s.th. went wrong. Fix it before committing your changes!
- For a "RESULTS CHANGED FOR" message you should check the differences in the results and judge carefully whether they are caused by a bug in your changes or due to numerical precision issues you can not influence. For example:
  + If you get 1.534678 instead of 1.489561, this is a BUG!
  + If you get -1.40545e-20 instead of 1.30506e-19, this may be fine. But THINK about it! 


HOW TO ADD YOUR OWN TEST

You only have to add a complete test-input in testsuite/TSTIN/ and a reference output (created by the input) in testsuite/RESULTS. 
Note the naming rules! And note that the run should not take longer than 5 seconds. So, take one of your examples and reduce it 
(fewer particles, timesteps) such that it fulfils these needs.
